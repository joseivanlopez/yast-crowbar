/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:	clients/crowbar.ycp
 * Package:	Configuration of crowbar
 * Summary:	Main file
 * Authors:     Jiri Suchomel <jsuchome@suse.cz>
 *              Michal Filka <mfilka@suse.cz>
 *
 * $Id: crowbar.ycp 27914 2006-02-13 14:32:08Z locilka $
 *
 * Main file for crowbar configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of crowbar</h3>
 */

textdomain "crowbar";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("Crowbar module started");

import "Crowbar";
import "Progress";
import "Report";
import "Summary";

import "CommandLine";
include "crowbar/wizards.ycp";

map cmdline_description = $[
    "id"	: "crowbar",
    // Command line help text for the Xcrowbar module
    "help"	: _("Configuration of crowbar"),
    "guihandler"        : CrowbarSequence,
];

// is path to data file given?
boolean custom_path = false;
list args = WFM::Args();
if(size(args) > 0) {
    if (is(WFM::Args(0), string))
    {
        string arg      = (string)WFM::Args(0);
        y2milestone ("taking path to config file from command line: %1", arg);
        Crowbar::network_file    = arg;
        custom_path           = true;
    }
}

any ret = custom_path ? CrowbarSequence () : CommandLine::Run(cmdline_description);

y2debug("ret=%1", ret);

/* Finish */
y2milestone("Crowbar module finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
